name: TrafficFilter

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
  
    runs-on: ubuntu-latest
    
    steps:

    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 7        
        
    - run: echo $SHA

    - name: Set VER_PREFIX
      run: echo "VER_PREFIX=0.1.${{ github.run_number }}" >> $GITHUB_ENV
      
    - name: Set FileVer
      run: echo "FILE_VER=/p:FileVersion=${{ env.VER_PREFIX }}.0 /p:VersionPrefix=${{ env.VER_PREFIX }} /p:VersionSuffix=${{ env.SHA }}" >> $GITHUB_ENV
            
    - run: echo $GITHUB_RUN_NUMBER
    - run: echo ${{ github.run_number }}
    - run: echo ${{ env.VER_PREFIX }}
    - run: echo ${{ env.FILE_VER }}
        
    - name: Checkout
      uses: actions/checkout@v2
      continue-on-error: false
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
      continue-on-error: false
        
    - name: Restore
      run: dotnet restore
      continue-on-error: false

    - name: Build
      run: dotnet build --configuration Release --no-restore
      continue-on-error: false
      
    - name: Test
      run: dotnet test --no-restore
      continue-on-error: false

      # Publish
    - name: publish on version change
      id: publish_nuget
      uses: rohith/publish-nuget@v2
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: src/TrafficFilter/TrafficFilter.csproj

        # NuGet package id, used for version detection & defaults to project name
        PACKAGE_NAME: TrafficFilter

        # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        # VERSION_FILE_PATH: Directory.Build.props

        # Regex pattern to extract version info in a capturing group
        # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$

        # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        # VERSION_STATIC: 0.1.0

        # Flag to toggle git tagging, enabled by default
        # TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          NUGET_SOURCE: https://api.nuget.org

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          # INCLUDE_SYMBOLS: false





      



